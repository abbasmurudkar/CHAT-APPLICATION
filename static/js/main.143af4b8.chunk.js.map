{"version":3,"sources":["misc/firebase.js","pages/Signin.js","Components/PrivateRouter.js","pages/Home.js","Components/PublicRouter.js","App.js","reportWebVitals.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Signin","useState","passwordhidden","setpassword","SiginProvider","provider","a","signInWithPopup","result","console","log","Alert","success","info","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","style","boxShadow","htmlFor","InputGroup","Input","type","id","Button","Icon","icon","onClick","color","block","FacebookAuthProvider","GoogleAuthProvider","GithubAuthProvider","PrivateRouter","children","to","Home","PublicRouter","routeProps","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.143af4b8.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';  //import this file for authentication\n// import 'firebase/database';    //import this file for database\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC9871MOe9wK5Qhs_JpmMpV1wjdHNPEjUI\",\n    authDomain: \"chat-app-7b3ef.firebaseapp.com\",\n    databaseURL: \"https://chat-app-7b3ef-default-rtdb.firebaseio.com\",\n    projectId: \"chat-app-7b3ef\",\n    storageBucket: \"chat-app-7b3ef.appspot.com\",\n    messagingSenderId: \"7755659777\",\n    appId: \"1:7755659777:web:b2be09b2713c3407775e00\"\n  };\n\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\n// export const auth = app.auth();\n// export const database = app.database();\nexport const auth = app.auth()\n","// import React from 'react'\n// import { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite'\n// import { auth, database } from '../misc/firebase'\n// import firebase from 'firebase/app'\n\n// const Signin = () => {\n\n//     const onFacebookSignin = () => {\n//         SigninWithProvider(new firebase.auth.FacebookAuthProvider())\n//     }\n//     const onGooleSignin = () => {\n//         SigninWithProvider(new firebase.auth.GoogleAuthProvider())\n//     }\n//     const SigninWithProvider = async (provider) => {\n//     try {\n//         const { additionalUserInfo,user} = await auth.signInWithPopup(provider)\n//         // console.log(result)\n//         if(additionalUserInfo.isNewUser)\n//         {\n//            await database.ref(`/profiles/${user.uid}`).set({\n//                 name:user.displayName,\n//                 created : firebase.database.ServerValue.TIMESTAMP       //this will provide the time the user has login or created by using this timestamp method\n//             })\n//         }  \n//         Alert.success('SUCCESFULL LOGIN',4000)\n//     } catch (error) {\n//         Alert.info(error.message,4000)\n//     }\n\n\n//     }\n//     return (\n//         <>\n//             <Container >\n//                 <Grid className=\"mt-page\">\n//                     <Row>\n//                         <Col xs={24} md={12} mdOffset={6}> \n//                             <Panel>                                     \n//                                 <div className=\"text-center\">\n//                                     <h1>WELCOME TO CHAT</h1>\n//                                     <p>Everything you will chat over here</p>\n//                                 </div>\n//                                 <div className=\"mt-3\">\n//                                     <Button block color=\"blue\" onClick={onFacebookSignin}>               \n//                                         <Icon icon=\"facebook\" /> Sign in with facebook\n//                                     </Button>\n//                                     <Button block color=\"green\" onClick={onGooleSignin}>\n//                                         <Icon icon=\"google\" /> Sign in with Google</Button>\n//                                 </div>\n//                             </Panel>\n//                         </Col>\n//                     </Row>\n//                 </Grid>\n//             </Container>\n\n//         </>\n\n//     )\n// }\n\n// export default Signin\n\nimport React, { useState } from 'react'\nimport { Alert, Button, Col, Container, Grid, Icon, Input, InputGroup, Panel, Row } from 'rsuite'\nimport { auth } from '../misc/firebase'\nimport firebase from 'firebase/app'\n\nfunction Signin() {\n    const [passwordhidden, setpassword] = useState(false)\n    \n    const Security = () => {\n        setpassword(!passwordhidden)\n    }\n    const SiginProvider = async (provider) =>{\n        try{\n            const result = await auth.signInWithPopup(provider)\n            console.log(result,\"result\")\n            Alert.success(\"Login Successfully\",4000)\n        }\n        catch(er){\n            Alert.info(er.message,4000)\n        }\n    }\n    const SigninWithFacebook = () =>{\n       SiginProvider(new firebase.auth.FacebookAuthProvider() )\n    }\n    const SigninWithGoogle = () =>{\n        SiginProvider(new firebase.auth.GoogleAuthProvider())\n    }\n    const SigninWithGithub = () =>{\n        SiginProvider(new firebase.auth.GithubAuthProvider())\n    }\n    const styles = {\n        boxShadow:\"0px 4px 20px 10px rgb(158 158 158) \"\n    }\n    return (\n        <Container >\n            <Grid className='mt-page' >\n                <Row>\n                    {/*xs is a small device screen and md is a medium device screen mdoffset is used to set the columns and bring the material at center*/}\n                    <Col xs={24} md={12} mdOffset={6}>\n                        {/*this is used to have the form as a panel in a container */}\n                        <Panel style={styles}>\n                            <div className='text-center'>\n                                <h2>WELCOME TO CHATS</h2>\n                                <p>Progressive chat application</p>\n                            </div>\n                            <div className='mt-3'>\n                                <div className='mt-3'>\n                                    <label htmlFor=\"user\">USERNAME:</label>\n                                    <InputGroup>\n                                        <Input type='text' id=\"user\" />\n                                        <InputGroup.Button>\n                                            <Icon icon=\"user\" />\n                                        </InputGroup.Button>\n                                    </InputGroup>\n                                    <label htmlFor=\"pass\">PASSWORD:</label>\n                                    <InputGroup>\n                                        <Input type={passwordhidden ? \"text\" : \"password\"} id=\"pass\" />\n                                        <InputGroup.Button onClick={Security}>\n                                            <Icon icon={passwordhidden ? \"eye\" : \"eye-slash\"} />\n                                        </InputGroup.Button>\n                                    </InputGroup>\n\n                                    <Button type=\"submit\" className='mt-3' color=\"red\">Submit</Button>\n                                </div>\n                                <div className='mt-3'>\n                                    {/*the block will take the full width according to parent component */}\n                                    <Button block color=\"blue\" onClick={SigninWithFacebook} >\n                                        <Icon icon=\"facebook\" /> Login With Facebook\n                                    </Button>\n                                    <Button block color=\"green\" onClick={SigninWithGoogle}>\n                                        <Icon icon=\"google\" /> Login With Google\n                                    </Button>\n                                    <Button block onClick={SigninWithGithub}>\n                                        <Icon icon=\"github\" /> Login with Github\n                                    </Button>\n                                    <div className='mt-3 mt-3'>\n                                    <Button block color=\"yellow\">\n                                        <Icon icon=\"ambulance\"/> Register\n                                    </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </Panel>\n                    </Col>\n                </Row>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Signin\n","// import React from 'react'\n// import { Redirect, Route } from 'react-router';\n// import { Container, Loader } from 'rsuite';\n// import { useProfile } from '../Context/Profile.context';\n\n// const PrivateRouter = ({ children, ...routeProps }) => {\n//     const {profiles,isloading}= useProfile()\n\n//     if(isloading && !profiles)   //if our data isloading and we dont have profile then it will show loader for loading\n//     {\n//         return (\n//         <Container>\n//             <Loader center vertical size=\"md\" content=\"loading\" speed=\"slow\"/>\n//         </Container>\n//         )\n//     }\n\n//     if (!profiles&&!isloading )   \n//     {\n//         return <Redirect to=\"/signin\" />\n//     }\n//     return (\n//         <Route {...routeProps} >  {/*this will return the home component when user sign in and its children */}\n//             {children}\n//         </Route>\n//     )\n// }\n\n// export default PrivateRouter\nimport React from 'react'\nimport { Redirect, Route } from 'react-router';\n\nconst PrivateRouter = ({children , ...routeProps}) => {\nconst Profile = false;\n\n\n// this condition tell that if we dont have any profile then it will redirect to signin page by default it is said to false\n//if we dont have profile and data is not loading\nif(!Profile)                                \n{\n    return <Redirect to=\"/sigin\"/>\n}\n\n\n\n    return (\n        <Route {...routeProps}>\n            {children}\n        </Route> \n    )\n}\n\nexport default PrivateRouter\n","import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            this is home\n        </div>\n    )\n}\n\nexport default Home\n","// import React from 'react'\n// import { Redirect, Route } from 'react-router';\n// import { Container, Loader } from 'rsuite';\n// import {  useProfile } from '../Context/Profile.context';\n\n// const PublicRouter = ({children, ...routeProps}) => {\n//     const {profiles , isloading} = useProfile()\n\n//     if(isloading && !profiles)   //if our data isloading and we dont have profile then it will show loader for loading\n//     {\n//         return (\n//         <Container>\n//             <Loader center vertical size=\"md\" content=\"loading\" speed=\"slow\"/>\n//         </Container>\n//         )\n//     }\n//     if(profiles && !isloading)   \n//     {\n//         return <Redirect to=\"/\"/>\n//     }\n//     return (\n//         <Route {...routeProps} >  {/*this will return the home component when user sign in and its children */}\n// {children}\n//         </Route>\n//     )\n// }\n\n// export default PublicRouter\nimport React from 'react'\nimport { Redirect , Route } from 'react-router'\n\nconst PublicRouter = ({children , ...routeProps}) => {\n     const Profile = false\n\n// if user created the profile then it will render to home page or else it will be render sigin page\nif(Profile)\n{\n    return <Redirect to=\"/\"/>\n}\n\n    return (\n        <Route {...routeProps}>\n            {children}\n        </Route>\n    )\n}\n\nexport default PublicRouter\n","import './App.css';\nimport './styles/main.scss'\nimport 'rsuite/dist/styles/rsuite-default.css';   //use this default css for rsuite \nimport {Switch } from 'react-router';\nimport Signin from './pages/Signin';\nimport PrivateRouter from './Components/PrivateRouter';\nimport Home from './pages/Home';\nimport PublicRouter from './Components/PublicRouter';\n// import { ProfileProvider } from './Context/Profile.context';\nfunction App() {\n  return (\n    <Switch>\n      <PublicRouter  path=\"/sigin\">\n          <Signin/>\n      </PublicRouter>\n      <PrivateRouter path=\"/\">    {/*privaterouter is a component created in components folder and we are giving path for router and it will render when user sign in */}\n        <Home/>\n        </PrivateRouter>\n        {/* <ProfileProvider>   PROFILE PROVIDER IS A NORMAL COMPONENT THAT USES THE CONTEXT API IN PROFILE.CONTEXT\n          </ProfileProvider> */}\n      </Switch>\n  );\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}